Vagrant.configure("2") do |config|

disk = '/tmp/secondDisk.vdi'

  config.vm.provision "shell",
    type: "shell",
    preserve_order: true,
    inline: <<-SHELL
      # if [ `cat /etc/os-release | grep -ioe "debian"` = "debian" ]; then
      if [ `lsb_release -a 2>/dev/null | grep -iwoE "(debian|ubuntu)" | head -n 1` ]; then
        apt-get update
        apt-get install -y python
      elif [ "$(cat /etc/redhat-release | grep -ioe "red hat")" = "Red Hat" ]; then
                echo -e "LANG=en_US.UTF-8\nLC_ALL=en_US.UTF-8" > /etc/environment
                version="$(grep -w "VERSION_ID" /etc/os-release | cut -d = -f 2 | tr -d '"' | awk -F "." '{print $1}')"
            if [ $version -eq "8" ]; then
                yum install -y python36
            fi
      elif [ "$(cat /etc/redhat-release | grep -woi centos)" == "CentOS" ]; then
           version=$(cat /etc/redhat-release | grep -woi "[[:digit:]]\.[[:digit:]]*" | awk -F "." '{print $1}')
           if [ $version -eq "6" ]; then
                yum install -y libselinux-python
           elif [ $version -eq "5" ]; then
                yum install -y epel-release
                yum install -y python26
           fi
      fi

  SHELL

    config.vm.define "centos6" do |centos6|
      centos6.vm.box = "centos/6"
      centos6.vm.hostname = "centos6"
      centos6.vm.network "private_network", ip: "192.168.40.80"
      centos6.vm.provider "virtualbox" do |vb|
          vb.memory = "256"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "centos6"
      end
  end

    config.vm.define "centos7" do |centos7|
      centos7.vm.box = "centos/7"
      centos7.vm.hostname = "centos7"
      centos7.vm.network "private_network", ip: "192.168.40.81"
      centos7.vm.provider "virtualbox" do |vb|
          vb.memory = "4096"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "centos7"
      end
  end

config.vm.define "centos8" do |centos8|
      centos8.vm.box = "centos/8"
      centos8.vm.hostname = "centos8"
      centos8.vm.network "private_network", ip: "192.168.40.82"
      centos8.vm.provider "virtualbox" do |vb|
          vb.memory = "256"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "centos8"
      end
  end

 config.vm.define "ol610" do |ol610|
      ol610.vm.box = "ol610"
      ol610.vm.hostname = "ol610"
      ol610.vm.network "private_network", ip: "192.168.40.83"
      ol610.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "ol610"
      end
  end

  config.vm.define "ol77" do |ol77|
      ol77.vm.box = "ol77"
      ol77.vm.hostname = "ol77"
      ol77.vm.network "private_network", ip: "192.168.40.84"
      ol77.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "ol77"
      end
  end

config.vm.define "ol80" do |ol80|
      ol80.vm.box = "ol80"
      ol80.vm.hostname = "ol80"
      ol80.vm.network "private_network", ip: "192.168.40.85"
      ol80.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "ol80"
      end
  end

# Debian Family

# Debian 8
config.vm.define "jessie64" do |jessie64|
      jessie64.vm.box = "debian/jessie64"
      jessie64.vm.hostname = "jessie64"
      jessie64.vm.network "private_network", ip: "192.168.40.89"
      jessie64.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "jessie64"
      end
  end

# Debian 9
config.vm.define "stretch64" do |stretch64|
      stretch64.vm.box = "debian/stretch64"
      stretch64.vm.hostname = "stretch64"
      stretch64.vm.network "private_network", ip: "192.168.40.90"
      stretch64.vm.provider "virtualbox" do |vb|
          #unless File.exist?('/tmp/mydisk.vmdk')
            #vb.customize ['createhd', '--filename', disk, '--variant', 'Fixed', '--size', 10 * 1024]
            #vb.customize ['storageattach', "debian",  '--storagectl', 'SATA controller', '--port', 2, '--device', 1, '--type', 'hdd', '--medium', disk]
            #  vb.customize [ "createmedium", "disk", "--filename", "/tmp/mydisk.vmdk", "--format", "vmdk", "--size", 1024 * 10 ]
            ## vb.customize [ "storageattach", "debian" , "--storagectl", "SATA Controller", "--port", "1", "--device", "0", "--type", "hdd", "--medium", "/tmp/mydisk.vmdk"]
          #end
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "stretch64"
      end
  end

# Debian 10
config.vm.define "buster64" do |buster64|
      buster64.vm.box = "debian/buster64"
      buster64.vm.hostname = "buster64"
      buster64.vm.network "private_network", ip: "192.168.40.91"
      buster64.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "buster64"
      end
  end

# Ubuntu Family

# ubuntu 14.04
config.vm.define "trusty64" do |trusty64|
      trusty64.vm.box = "ubuntu/trusty64"
      trusty64.vm.hostname = "trusty64"
      trusty64.vm.network "private_network", ip: "192.168.40.92"
      trusty64.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "trusty64"
      end
  end

# ubuntu 16.04
config.vm.define "xenial64" do |xenial64|
      xenial64.vm.box = "ubuntu/xenial64"
      xenial64.vm.hostname = "xenial64"
      xenial64.vm.network "private_network", ip: "192.168.40.93"
      xenial64.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "xenial64"
      end
  end


# ubuntu 18.04
config.vm.define "bionic64" do |bionic64|
      bionic64.vm.box = "ubuntu/bionic64"
      bionic64.vm.hostname = "bionic64"
      bionic64.vm.network "private_network", ip: "192.168.40.94"
      bionic64.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "2"
          vb.linked_clone = true
          vb.name = "bionic64"
      end
  end

  config.vm.provision "ansible" do |ansible|
  ansible.playbook = "../../../ansible/playbooks/create-user-vagrant.yml"
  end

end
