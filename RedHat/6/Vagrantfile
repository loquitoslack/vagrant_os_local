# -*- mode: ruby -*-
# vi: set ft=ruby :

datadisk1 = 'data_disk1.vdi'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.provision "shell",
    type: "shell",
    preserve_order: true,
    inline: <<-SHELL
_registration_os(){
     if [ `which subscription-manager` ]
     then
          subscription-manager register --username=eflores@canvia.com --password="Tuadoo4u" --auto-attach --force
     fi
}

_get_RedHat(){
     os=$1
     version=$2
     _registration_os
     if [ $version -ge 7 ]; then
          echo -e "LANG=en_US.UTF-8\nLC_ALL=en_US.UTF-8" > /etc/environment
          yum install -y python36
     elif [ $version -eq 6 ]; then
          yum install -y libselinux-python
     elif [ $version -eq 5 ]; then
          yum install -y epel-release
          yum install -y python26

     fi
}

_get_Debian(){
     $os=$1
     $version=$2
     apt-get update
     export DEBIAN_FRONTEND=noninteractive
     apt-get install -y python
}

_check_distro(){
     if [ -f /etc/os-release ]; then
          os=`grep -w "ID" /etc/os-release | awk -F = '{print $2}' | tr -d '"'`
          version=`grep -w "VERSION_ID" /etc/os-release | awk -F = '{print $2}' | tr -d '"'`
          if [ $os == "centos" ] || [ $os == "RedHat"]
          then
               _get_RedHat $os $version
          elif [ $os == "Debian"] || [ $os == "Ubuntu" ]
          then
               _get_Debian $os $version
          fi
     elif [ -f /etc/redhat-release ];
     then
          if [[ $(grep -ow "Red Hat" /etc/redhat-release) == "Red Hat" ]]
          then
               os="RedHat"
          fi
          version=`grep -wo '[[:digit:]]' /etc/redhat-release`
          _get_RedHat $os $version
     fi
}
_check_distro

  SHELL
             # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/rhel6"
  config.vm.hostname = "rhel6"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
    config.vm.network "private_network", ip: "192.168.56.6"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
      vb.memory = "512"
      vb.cpus = "2"
      vb.linked_clone = true
      vb.name = "rhel6_56_6"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # if Vagrant.has_plugin?("vagrant-proxyconf")
  #  config.proxy.http     = "http://192.168.33.254:3128/"
  #  config.proxy.https    = "http://192.168.33.254:3128/"
  #  config.proxy.ftp      = "http://192.168.33.254:3128/"
  #  config.proxy.no_proxy = "localhost,127.0.0.1,.example.com"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  # Ejecutar un playbook de ansible (wordpress.yml) como aprovisionamiento del box
 config.vm.provision "ansible" do |ansible|
   ansible.extra_vars = {
     remove_ip: "192.168.56.6"
    }
 	  ansible.playbook = "/Users/edwinflores/Documents/github.com/MyProjects/ansible/playbooks/create-user-vagrant.yml"
  end

end
